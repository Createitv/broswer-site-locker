name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false
      
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build extension
        run: pnpm build
      
      - name: Package extension
        run: pnpm package
      
      - name: Get package info
        id: package
        run: |
          echo "name=$(node -p "require('./package.json').name")" >> $GITHUB_OUTPUT
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          echo "displayName=$(node -p "require('./package.json').displayName")" >> $GITHUB_OUTPUT
      
      - name: Set release tag
        id: tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi
      
      - name: Create ZIP for Chrome Web Store
        run: |
          cd build/chrome-mv3-prod
          zip -r "../../${{ steps.package.outputs.name }}-${{ steps.tag.outputs.tag }}-chrome.zip" .
      
      - name: Create ZIP for Firefox (if exists)
        run: |
          if [ -d "build/firefox-mv2-prod" ]; then
            cd build/firefox-mv2-prod
            zip -r "../../${{ steps.package.outputs.name }}-${{ steps.tag.outputs.tag }}-firefox.zip" .
          fi
        continue-on-error: true
      
      - name: Generate changelog
        id: changelog
        run: |
          # Generate changelog from git commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          if [ -n "$LAST_TAG" ]; then
            CHANGELOG=$(git log $LAST_TAG..HEAD --pretty=format:"- %s" --no-merges)
          else
            CHANGELOG=$(git log --pretty=format:"- %s" --no-merges -10)
          fi
          
          # Create changelog file
          cat > CHANGELOG.md << EOF
          ## What's Changed
          
          $CHANGELOG
          
          ## ðŸ“¦ Installation
          
          ### For Chrome/Edge/Brave:
          1. Download \`${{ steps.package.outputs.name }}-${{ steps.tag.outputs.tag }}-chrome.zip\`
          2. Unzip the file
          3. Go to \`chrome://extensions/\`
          4. Enable "Developer mode"
          5. Click "Load unpacked" and select the unzipped folder
          
          ### Build Requirements
          - Node.js 18+
          - pnpm 8+
          
          ## ðŸ”’ Security Note
          This is proprietary software. See [LICENSE](LICENSE) for usage terms.
          EOF
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: "${{ steps.package.outputs.displayName }} ${{ steps.tag.outputs.tag }}"
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
          files: |
            ${{ steps.package.outputs.name }}-${{ steps.tag.outputs.tag }}-chrome.zip
            ${{ steps.package.outputs.name }}-${{ steps.tag.outputs.tag }}-firefox.zip
            build/chrome-mv3-prod.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: extension-builds-${{ steps.tag.outputs.tag }}
          path: |
            build/
            *.zip
          retention-days: 90
      
      - name: Notify success
        run: |
          echo "âœ… Release ${{ steps.tag.outputs.tag }} created successfully!"
          echo "ðŸ“¦ Chrome extension: ${{ steps.package.outputs.name }}-${{ steps.tag.outputs.tag }}-chrome.zip"
          echo "ðŸš€ GitHub Release: ${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ steps.tag.outputs.tag }}"